// 01_VAR_CONST_LET.js

// 변수 선언
// 자바 스크립트의 버전에 따라 사용하는 변수 선언이 많이 달라짐.
// 브라우저를 대상으로 하는 ES2015 버전 이전에는 var로 변수 선언이 많이 되었지만, 
// 이 후 부터, conset 또는 let 변수를 많이 사용함.

// var로 선언한 변수 사용의 예
var x = 3;
console.log('var x : ' , x);
x = '홍길동';
console.log('var x : ' , x);

// 상수형 변수 선언 const
// 변수의 생성과 함께 반드시 초기 값이 있어야 하며, 이 후 저장된 값의 변경이 불가능함.
const y =3;
console.log('const y : ' , y);
// y = '홍길서' ; // 에러임. -const 변수는 값을 1회만 할당하고 변경 할 수 없음.


//------------------------------------------------------------------------------
// var과 const의 또 다른 차이점.

// 1. 블록스코프: var 변수는 영역({}, 지역변수)과 상관없이 값이 접근이 가능함.
if( true ){
    var a = 3;
}
console.log("a : " , a);
// 다만 함수의 시작과 끝을 구분 짓는  중괄호({,})는ㄴ 영향을 받아서 함수를 벗어나면 변수로 인식되지 못함.

// 반면 const 변수(상수)는 블록영역에 영향을 받아 접근이 구분됨.
if(true){
    const b = 3;
}
// console.log("b: ", b); // 에러

// const 변수는 상수형 변수라고 부름.
// 한 번 할당된 값은 변경 할 수 없으며, 상수 선언  초기화가 없어도 에러가 발생함.
const a1 = 0;
// a1 = 1; // 에러
// conset c; // 에러 : 초기화되지 않은 상수형 변수

// 값은 변경 할 수 있는 변수를 사용하려면, 앞에서 사용한 var 변수나, 서버 프로그래밍에서 주로 사용하는 left 변수를 사용함.
//  var 과 let 변수의 차이는 다소 많지 않으며, 명백히 다른 점이 있지만, 현재 사용 상 구분할 일이 그렇게 많지 않음.

// const, let, var 의 차이점

// 자바스크립트의 변수 생성은 선언, 할당 (초기값 대입), 사용의 단계로 구분됨.
// const 와 let 은 그 사용 영역이 구분되어 사용해야 하지만, var은 그 구분이 비교적 자유로움.
// const 와 let 변수는 반드시 선언한 후에 사용해야하며, var은 선언 없이 사용될 수 있음.
// 선언과 할당없이 사용된 변수는 모두 var 변수임. 선언과 할당없이 사용된 var 변수의 최초 값은 undefinde임.

//   const 
// - 선언과 동시에 값이 초기화 되어야 함.
// - 한 번 선언되고 값이 초기화된 변수는 값을 변경할 수 없음.
// - 하나의 스코프({})안에서 중복 선언할 수 없음.
// - 스코프를 벗어나면 선언된 변수는 소멸되어 인식되지 않음.



//   let
// - 반드시 선언해서 사용해야 하지만, 초기값이 반드시 있어야 하는 것은 아님.
// - 초기값이 없이 선언된 변수의 값은 undefined 임.
// - 변수값이 재할당(변경)이 가능함.
// - 하나의 스코프({})안에서 중복 선언할 수 없음.
// - 스코프를 벗어나면 선언된 변수는 소멸되어 인식되지 않음..



//  var
// - 선언, 할당, 사용이 위치와 상관없이 자유로움.
// - 스코프에 상관없이 값의 접근이 가능함.
// - 같은 스코프 안에서 중복 선언도 가능함.
// - 이 때 마지막에 대입한 값을 현재값으로 인식함.
// - 이 와 같은 특정으로 구조가 복잡한 함수내에서 현재값을 유추하는데 다소 불편함이 있을 수 있음.
// - 값의 변경이 자유로워서 의도한 값의 저장 및 유지가 실패할 가능성이 있음.
// - 함수의 영역을 벗어나는 스코프에만 영향을 받음.

/* 정상 실행
if(조건){
    var a;
}
console.log(a);
*/

/* 에러
function anc(){
    var a;
}
console.log(a);
*/

// 변수 선언과 선언 키워드 별 사용의 방향
// 1. 변수 선언에는 기본적으로 const를 사용하고, 재할당이 필요한 경우에 한정해 let 사용을 권장함.
// - 객체를 재할당하는 경우는 생각보다 흔치않으므로, 객체 변수 또한 const를 사용하는것을 권장하며,
//   const를 사용하면 의도치 않은 재할당을 방지해 주기 때문에 데이터의 안정을 보장 받을 수 있음.
// 2. 재할당이 필요한 경우에 한 해 let을 사용함. 이때, 변수의 스코프(영역)는 최대한 좁게 만드는 것을 권장함.
// - 재할당이 필요없는 상수와 객체에만 const를 사용함.  













